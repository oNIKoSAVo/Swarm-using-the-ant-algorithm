
import matplotlib.pyplot as plt
import numpy as np

data_list =[{'Муравей 1': [('1 -> 2', 0.34033486966838633), ('1 -> 3', 0.2702587099836708), ('1 -> 4', 0.29260757246154606), ('2 -> 5', 0.2714413055831711), ('2 -> 6', 0.2110856636769013), ('2 -> 7', 0.42526943174516674), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.3757842045812662), ('8 -> 10', 0.21801183217451944), ('8 -> 11', 0.2933830495990775), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5547821471536408), ('12 -> 14', 0.11775284222515693), ('12 -> 15', 0.20196885756026223), ('15 -> 16', 0.9121260772657948)]}, {'Муравей 2': [('1 -> 2', 0.35152462075050034), ('1 -> 3', 0.2646873297797547), ('1 -> 4', 0.28657547071419914), ('2 -> 5', 0.2922196141977781), ('2 -> 6', 0.43423544996159247), ('2 -> 7', 0.1811802978710247), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.36508357711965267), ('8 -> 10', 0.23704297319962672), ('8 -> 11', 0.28502883279315827), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5421661205267865), ('12 -> 14', 0.11507508303531598), ('12 -> 15', 0.21686224926458234), ('15 -> 16', 0.9121260772657949)]}, {'Муравей 3': [('1 -> 2', 0.3400567709903523), ('1 -> 3', 0.28625350693098517), ('1 -> 4', 0.2772264685416693), ('2 -> 5', 0.2619676716509842), ('2 -> 6', 0.23553070478606034), ('2 -> 7', 0.4104270078544949), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.35605564068086626), ('8 -> 10', 0.23118127733209168), ('8 -> 11', 0.29947823257575024), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5304170263037427), ('12 -> 14', 0.1125813307661907), ('12 -> 15', 0.23073221542827832), ('15 -> 16', 0.9121260772657948)]}, {'Муравей 4': [('1 -> 2', 0.35046374629198035), ('1 -> 3', 0.2807680152557067), ('1 -> 4', 0.27191396249883926), ('2 -> 5', 0.250495036286592), ('2 -> 6', 0.22521585228498978), ('2 -> 7', 0.432353119806296), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.34826511206477273), ('8 -> 10', 0.22612301072770163), ('8 -> 11', 0.3119471354368775), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5202990592077112), ('12 -> 14', 0.1104337862044001), ('12 -> 15', 0.24267661374556304), ('15 -> 16', 0.9121260772657949)]}, {'Муравей 5': [('1 -> 2', 0.3617142796833314), ('1 -> 3', 0.2748378861382634), ('1 -> 4', 0.2661708407084701), ('2 -> 5', 0.24191057633273538), ('2 -> 6', 0.24873452464770474), ('2 -> 7', 0.41753638691640454), ('6 -> 8', 0.9351368739179571), ('8 -> 9', 0.36221685566766926), ('8 -> 10', 0.22042683843955221), ('8 -> 11', 0.3040890027217471), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5308025242181497), ('12 -> 14', 0.10716965774283803), ('12 -> 15', 0.23550373967225852), ('15 -> 16', 0.9121260772657948)]}, {'Муравей 6': [('1 -> 2', 0.370434386499728), ('1 -> 3', 0.2702415387882896), ('1 -> 4', 0.2617194397188874), ('2 -> 5', 0.22813620856768516), ('2 -> 6', 0.3568884574126878), ('2 -> 7', 0.3233763298830081), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.3550793825088985), ('8 -> 10', 0.21608333366273835), ('8 -> 11', 0.3152275079212946), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5217546975641302), ('12 -> 14', 0.10534289083502038), ('12 -> 15', 0.24609573209041752), ('15 -> 16', 0.9121260772657948)]}, {'Муравей 7': [('1 -> 2', 0.36161880866481333), ('1 -> 3', 0.2638103450162259), ('1 -> 4', 0.27707016416152924), ('2 -> 5', 0.21926311880398291), ('2 -> 6', 0.37845911314765873), ('2 -> 7', 0.3107989875114344), ('6 -> 8', 0.9351368739179569), ('8 -> 9', 0.3663145668362855), ('8 -> 10', 0.21164532815909473), ('8 -> 11', 0.3087532399093151), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5129668514551836), ('12 -> 14', 0.10356861430689014), ('12 -> 15', 0.2563833738542614), ('15 -> 16', 0.9121260772657946)]}, {'Муравей 8': [('1 -> 2', 0.3538088680165877), ('1 -> 3', 0.25811278977961655), ('1 -> 4', 0.29066975446058774), ('2 -> 5', 0.2117358537875982), ('2 -> 6', 0.3967580424516916), ('2 -> 7', 0.3001293119244788), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.35732664169111733), ('8 -> 10', 0.22819985742521925), ('8 -> 11', 0.3011776443423681), ('10 -> 12', 0.8729037758732355), ('12 -> 13', 0.5216630591427212), ('12 -> 14', 0.10108536085794073), ('12 -> 15', 0.2502360974651968), ('15 -> 16', 0.9121260772657948)]}, {'Муравей 9': [('1 -> 2', 0.34775269110665086), ('1 -> 3', 0.2536946508946709), ('1 -> 4', 0.3012154843788388), ('2 -> 5', 0.2044883175311454), ('2 -> 6', 0.38317735573156514), ('2 -> 7', 0.3210419965655294), ('6 -> 8', 0.935136873917957), ('8 -> 9', 0.35157520741448783), ('8 -> 10', 0.22452681341230765), ('8 -> 11', 0.31032283811966144), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5147717344945525), ('12 -> 14', 0.09974999308243802), ('12 -> 15', 0.2582502657839686), ('15 -> 16', 0.9121260772657946)]}, {'Муравей 10': [('1 -> 2', 0.34233172587217026), ('1 -> 3', 0.24973991548112975), ('1 -> 4', 0.31065510876716557), ('2 -> 5', 0.23289585555831238), ('2 -> 6', 0.23946551160722582), ('2 -> 7', 0.43592853327277886), ('6 -> 8', 0.9351368739179569), ('8 -> 9', 0.3463858494298258), ('8 -> 10', 0.22121272872322936), ('8 -> 11', 0.31857429020393857), ('10 -> 12', 0.8729037758732354), ('12 -> 13', 0.5085117303457043), ('12 -> 14', 0.09853695955961501), ('12 -> 15', 0.26553024887668386), ('15 -> 16', 0.9121260772657948)]}]



# Собираем данные по каждому переходу от всех муравьев
transitions = {}
for ant_data in data_list:
    for k, v in list(ant_data.values())[0]:
        if k not in transitions:
            transitions[k] = []
        transitions[k].append(v)

# Вычисляем средние значения для каждого перехода
averages = {k: np.mean(v) for k, v in transitions.items()}

# Отрисовка bar plot
fig, ax = plt.subplots()
ax.bar(averages.keys(), averages.values())
ax.set_title("Средняя длительность переходов муравьев")
ax.set_xlabel("Переходы")
ax.set_ylabel("Среднее время")

# Вращение меток оси X, чтобы они были читаемыми
for label in ax.get_xticklabels():
    label.set_rotation(45)
    label.set_horizontalalignment("right")

# Показать график
plt.show()



# fig, ax = plt.subplots()
# x_labels = []

# colors = plt.cm.get_cmap("tab10", len(data_list))

# all_y = []

# for index, data in enumerate(data_list):
#     for ant, values in data.items():
#         x = []
#         y = []
#         for i, (_, val) in enumerate(values):
#             x.append(i)
#             y.append(val)
#         x = np.array(x)
#         y = np.array(y)
#         all_y.append(y)
#         x_labels = [item[0] for item in values]
        
#         offset = index * 0.05
#         ax.scatter(x + offset, y, label=ant, color=colors(index))

# average_line = np.mean(all_y, axis=0)
# ax.plot(x, average_line, color='black', linestyle='--', label='Средняя линия')

# ax.set_xticks(range(len(x_labels)))
# ax.set_xticklabels(x_labels, rotation=45, ha='right')
# ax.set_xlabel('Соединения')
# ax.set_ylabel('Значения')

# ax.set_ylim(0, 1.2) # Устанавливаем границы значений y-оси

# ax.legend()

# plt.tight_layout()
# plt.show()